---
import config from "@/config/config.json";
import { AddToCart } from "@/functional-components/cart/AddToCart";
import type { Product } from "@/lib/wordpress/types";

interface Props {
  products: Product[];
}

const { products } = Astro.props;
const { currencySymbol } = config.woocommerce;
---

<div class="row">
  {
    products.map((product: any) => {
      const {
        name: title,
        slug: handle,
        images,
        price,
        regular_price,
        sale_price,
      } = product;

      const featuredImage = images && images.length > 0 ? images[0] : null;
      return (
        <div class="text-center col-6 md:col-4 lg:col-3 mb-8 md:mb-14 group relative">
          <div class="relative overflow-hidden">
            <img
              src={featuredImage?.src || "/images/product_image404.jpg"}
              width={312}
              height={269}
              alt={featuredImage?.alt || "fallback image"}
              class="w-[312px] h-[150px] md:h-[269px] object-cover border border-border rounded-md"
            />

            <AddToCart
              client:only="react"
              variants={[]}
              availableForSale={product.stock_status === 'instock'}
              handle={handle}
              defaultVariantId={product.id.toString()}
              stylesClass="btn btn-primary max-md:btn-sm z-10 absolute bottom-12 md:bottom-0 left-1/2 transform -translate-x-1/2 translate-y-full md:group-hover:-translate-y-6 duration-300 ease-in-out whitespace-nowrap drop-shadow-md"
            />
          </div>
          <div class="py-2 md:py-4 text-center z-20">
            <h2 class="font-medium text-base md:text-xl">
              <a
                class="after:absolute after:inset-0"
                href={`/products/${handle}`}
              >
                {title}
              </a>
            </h2>
            <div class="flex flex-wrap justify-center items-center gap-x-2 mt-2 md:mt-4">
              <span class="text-base md:text-xl font-bold text-text-dark dark:text-darkmode-text-dark">
                {currencySymbol}
                {price}
              </span>

              {sale_price && parseFloat(regular_price) > parseFloat(sale_price) && (
                <s class="text-text-light dark:text-darkmode-text-light text-xs md:text-base font-medium">
                  {currencySymbol} {regular_price}
                </s>
              )}
            </div>
          </div>
        </div>
      );
    })
  }
</div>

<div class="flex justify-center">
  <a class="btn btn-sm md:btn-lg btn-primary font-medium" href="/products">
    + See All Products
  </a>
</div>
